package main

import (
	"MexcPumpDumpAlert/internal/api"
	"MexcPumpDumpAlert/internal/blacklist"
	"MexcPumpDumpAlert/internal/config"
	"MexcPumpDumpAlert/internal/monitor"
	"MexcPumpDumpAlert/internal/telegram"
	"log"
	"os"
	"runtime/debug"
	"strconv"
	"time"

	"github.com/joho/godotenv"
)

func main() {
	log.Println("üöÄ Starting MEXC Pump/Dump Alert Bot...")

	// –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
	err := godotenv.Load()
	if err != nil {
		log.Printf("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å .env —Ñ–∞–π–ª: %v. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.", err)
	}

	// –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
	telegramToken := os.Getenv("TELEGRAM_TOKEN")
	chatID := os.Getenv("TELEGRAM_CHAT_ID")
	allowedUserIDStr := os.Getenv("TELEGRAM_ALLOWED_USER_ID")
	intervalSecondsStr := os.Getenv("INTERVAL_SECONDS")
	priceChangePctStr := os.Getenv("PRICE_CHANGE_PCT")
	volumeUSDStr := os.Getenv("VOLUME_USD")

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
	if telegramToken == "" || chatID == "" || allowedUserIDStr == "" {
		log.Fatal("‚ùå TELEGRAM_TOKEN, TELEGRAM_CHAT_ID –∏ TELEGRAM_ALLOWED_USER_ID –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã")
	}

	// –ü–∞—Ä—Å–∏–º —á–∏—Å–ª–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
	allowedUserID, err := strconv.ParseInt(allowedUserIDStr, 10, 64)
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ TELEGRAM_ALLOWED_USER_ID: %v", err)
	}

	intervalSeconds, err := strconv.Atoi(intervalSecondsStr)
	if err != nil || intervalSeconds <= 0 {
		intervalSeconds = 60 // default value
		log.Printf("‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è INTERVAL_SECONDS: %d", intervalSeconds)
	}

	priceChangePct, err := strconv.ParseFloat(priceChangePctStr, 64)
	if err != nil || priceChangePct <= 0 {
		priceChangePct = 10.0 // default value
		log.Printf("‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è PRICE_CHANGE_PCT: %.1f%%", priceChangePct)
	}

	volumeUSD, err := strconv.ParseFloat(volumeUSDStr, 64)
	if err != nil || volumeUSD <= 0 {
		volumeUSD = 50000 // default value
		log.Printf("‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è VOLUME_USD: $%.0f", volumeUSD)
	}

	// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
	cfg := config.NewConfig(intervalSeconds, priceChangePct, volumeUSD)
	bl := blacklist.NewBlacklist()

	log.Printf("üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
	log.Printf("   - –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: %d —Å–µ–∫—É–Ω–¥", intervalSeconds)
	log.Printf("   - –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã: %.1f%%", priceChangePct)
	log.Printf("   - –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º: $%.0f", volumeUSD)
	log.Printf("   - Telegram —á–∞—Ç: %s", chatID)

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram –±–æ—Ç–∞
	bot, err := telegram.NewBot(telegramToken, chatID, allowedUserID, cfg, bl)
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞: %v", err)
	}
	log.Println("‚úÖ Telegram –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º MEXC API –∫–ª–∏–µ–Ω—Ç
	mexcClient := api.NewMEXCClient()
	log.Println("‚úÖ MEXC API –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

	// –ó–∞–ø—É—Å–∫–∞–µ–º bot.Run –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –≥–æ—Ä—É—Ç–∏–Ω–µ
	go func() {
		for {
			func() {
				defer func() {
					if r := recover(); r != nil {
						log.Printf("üí• Panic in bot.Run: %v\nStack: %s", r, debug.Stack())
					}
				}()
				log.Println("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
				bot.Run()
				log.Println("‚ö†Ô∏è  Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
			}()
			time.Sleep(5 * time.Second)
		}
	}()

	log.Println("üîç –ù–∞—á–∏–Ω–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ MEXC...")

	// –ó–∞–ø—É—Å–∫–∞–µ–º monitor.Run –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
	for {
		func() {
			defer func() {
				if r := recover(); r != nil {
					log.Printf("üí• Panic in monitor.Run: %v\nStack: %s", r, debug.Stack())
				}
			}()
			monitor.Run(mexcClient, cfg, bl, bot)
			log.Println("‚ö†Ô∏è  –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
		}()
		time.Sleep(5 * time.Second)
	}
}
